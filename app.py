import streamlit as st
import pandas as pd
import os
import re
from datetime import datetime

st.title("üìã Formulario de Registro")

def validar_correo(correo):
    return re.match(r"[^@]+@[^@]+\.[^@]+", correo)

# Cargar archivo con provincias, cantones y distritos
archivo_ubicaciones = "divisi√≥n_territorial_CR.xlsx"

if not os.path.exists(archivo_ubicaciones):
    st.error("Archivo de ubicaciones no encontrado. Por favor, sube el archivo 'ubicaciones.xlsx' con las columnas Provincia, Cant√≥n y Distrito.")
    st.stop()

df_ubicaciones = pd.read_excel(archivo_ubicaciones)


# Limpieza r√°pida para evitar espacios extras
df_ubicaciones['Provincia'] = df_ubicaciones['Provincia'].str.strip()
df_ubicaciones['Cant√≥n'] = df_ubicaciones['Cant√≥n'].str.strip()
df_ubicaciones['Distrito'] = df_ubicaciones['Distrito'].str.strip()

# Inicializar session_state para inputs si no existen
for key, default in [("nombre", ""), ("edad", 0), ("correo", ""), ("comentario", ""),
                     ("provincia", ""), ("canton", ""), ("distrito", "")]:
    if key not in st.session_state:
        st.session_state[key] = default

def limpiar_formulario():
    for key in ["nombre", "edad", "correo", "comentario", "provincia", "canton", "distrito"]:
        if isinstance(st.session_state[key], int):
            st.session_state[key] = 0
        else:
            st.session_state[key] = ""

# Campos del formulario
nombre = st.text_input("Nombre completo", key="nombre")
edad = st.number_input("Edad", 0, 120, key="edad")
correo = st.text_input("Correo electr√≥nico", key="correo")
grupo = st.selectbox(
    "¬øCu√°l es el n√∫mero de grupo donde te inscribiste? *",
    options=["", "Grupo 1", "Grupo 2", "Grupo 3", "Grupo 4", "Grupo 5", "Grupo 6", "Grupo 7", "Grupo 8", "Grupo 9", "Grupo 10"],
    key="grupo"
)
asististe = st.radio(
    "¬øAsististe a las cuatro clases? *",
    options=["Si", "No"],
    key="asististe"
)
motivo_ausencia = st.selectbox(
    "Si faltaste a algunas de las clases, ¬øpor qu√© fue? *",
    options=[
        "",
        "Tuve problemas de internet",
        "Tuve que atender otras situaciones",
        "Sent√≠a que las clases no me eran √∫tiles",
        "No entend√≠a la materia",
        "No me gustaban las clases",
        "El horario me resultaba muy inc√≥modo",
        "No falt√© a ninguna clase",
        "Otros"
    ],
    key="motivo_ausencia"
)
clase_favorita = st.text_area(
    "¬øCu√°l de las clases te gust√≥ m√°s? Porfa contanos por qu√© *",
    key="clase_favorita"
)
clase_menos_gusto = st.text_area(
    "¬øCu√°l de las clases te gust√≥ menos? Porfa contanos por qu√© *",
    key="clase_menos_gusto"
)
recomendaciones = st.text_area(
    "¬øQu√© recomendaciones nos har√≠as para el futuro? *",
    key="recomendaciones"
)

experiencia = st.text_area(
    "¬øPodr√≠as escribir unas pocas l√≠neas coment√°ndonos tu experiencia y resumi√©ndonos cu√°l ha sido tu apreciaci√≥n general del curso? (Por ejemplo, podr√≠as responder a alguna o algunas de estas preguntas: ¬øc√≥mo ha sido el contacto con tus tutores? ¬øte has sentido acompa√±ado(a) y apoyado(a)? ¬øEl curso ha cumplido tus expectativas? ¬øqu√© fue lo que m√°s te gust√≥? ¬øqu√© fue lo que menos te gust√≥? ¬ørecomendar√≠as el curso a otras personas? ¬øte sent√≠s contento(a) de haber llevado el curso?, o simplemente contarnos qu√© te ha parecido todo‚Ä¶)*",
    key="experiencia"
)

calificacion = st.slider(
    "En general, ¬øqu√© calificaci√≥n le das al curso? *",
    min_value=1, max_value=10, value=5, step=1,
    format="%d",
    key="calificacion"
)
interes_cursos = st.multiselect(
    "Inter√©s por otros cursos que impartimos y que no hayas llevado *",
    options=[
        "Econom√≠a para la Vida",
        "Redacci√≥n Consciente",
        "Excel Intermedio",
        "Econom√≠a para entender el Mercado y la Sociedad",
        "Indicadores Macroecon√≥micos",
        "Ninguno"
    ],
    key="interes_cursos"
)

otro_curso = st.text_input(
    "¬øQu√© otro curso te gustar√≠a recibir de manera virtual?",
    key="otro_curso"
)

# Select provincia
provincias = df_ubicaciones['Provincia'].unique()
provincia = st.selectbox("Provincia", options=[""] + list(provincias), key="provincia")

# Select cant√≥n seg√∫n provincia
if provincia:
    cantones = df_ubicaciones[df_ubicaciones['Provincia'] == provincia]['Cant√≥n'].unique()
else:
    cantones = []
canton = st.selectbox("Cant√≥n", options=[""] + list(cantones), key="canton")

# Select distrito seg√∫n cant√≥n
if canton:
    distritos = df_ubicaciones[(df_ubicaciones['Provincia'] == provincia) & (df_ubicaciones['Cant√≥n'] == canton)]['Distrito'].unique()
else:
    distritos = []
distrito = st.selectbox("Distrito", options=[""] + list(distritos), key="distrito")

archivo = "respuestas.csv"

col1, col2 = st.columns(2)

with col1:
    if st.button("Enviar"):
        if not nombre.strip():
            st.error("Por favor ingresa tu nombre completo.")
        elif not validar_correo(correo):
            st.error("Por favor ingresa un correo v√°lido.")
        elif not provincia or not canton or not distrito:
            st.error("Por favor selecciona provincia, cant√≥n y distrito.")
        else:
            nueva_respuesta = pd.DataFrame({
                'Nombre': [nombre],
                'Edad': [edad],
                'Correo': [correo],
                'Comentario': [comentario],
                'Provincia': [provincia],
                'Cant√≥n': [canton],
                'Distrito': [distrito],
                'Fecha': [datetime.now().strftime("%Y-%m-%d %H:%M:%S")]
            })
            
            if os.path.exists(archivo):
                df_existente = pd.read_csv(archivo)
                df_actualizado = pd.concat([df_existente, nueva_respuesta], ignore_index=True)
            else:
                df_actualizado = nueva_respuesta

            df_actualizado.to_csv(archivo, index=False)
            st.success("‚úÖ ¬°Gracias por enviar tu respuesta!")

with col2:
    if st.button("Limpiar formulario"):
        limpiar_formulario()
        st.info("Formulario limpiado.")

if st.checkbox("Mostrar respuestas"):
    user = st.text_input("Usuario")
    password = st.text_input("Contrase√±a", type="password")

    usuario_correcto = "admin"
    contrase√±a_correcta = "1234"

    if user == usuario_correcto and password == contrase√±a_correcta:
        if os.path.exists(archivo):
            st.write(pd.read_csv(archivo))
        else:
            st.write("A√∫n no hay respuestas.")
    else:
        st.warning("‚ùå Usuario o contrase√±a incorrectos")
